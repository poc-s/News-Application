{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/news-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.example-card{\\r\\n    margin-top: 4px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.img-article{\\r\\n    height: 350px;\\r\\n}\\r\\n\\r\\n.action-buttons{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    border: 1px solid rgba(111, 111, 111, 0.50);\\r\\n}\\r\\n\\r\\n.example-sidenav-content {\\r\\n    display: flex;\\r\\n    height: 75%;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.example-sidenav {\\r\\n    padding: 20px;\\r\\n}\\r\\n\\r\\n.source-name {\\r\\n    margin-left:5px;\\r\\n}\\r\\n\\r\\n.list-item:hover{\\r\\n    cursor: pointer;\\r\\n    background-color: #3f51b5;\\r\\n    color: white;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <button mat-button (click)=\\\"sidenav.open ()\\\" ><mat-icon>menu</mat-icon></button>\\n  <span>News Headlines</span>\\n  <span class=\\\"example-spacer\\\"></span>\\n  <button mat-button [matMenuTriggerFor]=\\\"appMenu\\\"><mat-icon>settings</mat-icon></button>\\n</mat-toolbar>\\n<mat-menu #appMenu=\\\"matMenu\\\">\\n  <button mat-menu-item> Settings </button>\\n  <button mat-menu-item> Help </button>\\n</mat-menu>\\n<mat-sidenav-container class=\\\"example-container\\\">\\n\\n  <mat-sidenav #sidenav class=\\\"example-sidenav\\\">\\n    <mat-list class=\\\"list-nav\\\">\\n        <mat-list-item class=\\\"list-item\\\" *ngFor=\\\"let source of mSources\\\" (click)=\\\"searchArticles(source.id);sidenav.close();\\\">\\n\\n          <div mat-card-avatar [ngStyle]=\\\"{'background-image': 'url(../assets/images/'+ source.id +'.png)'}\\\" class=\\\"example-header-image\\\"></div>\\n\\n          <span class=\\\"source-name\\\"> {{source.name}}</span>\\n\\n        </mat-list-item>\\n    </mat-list>\\n  </mat-sidenav>\\n  <mat-card class=\\\"example-card\\\"  *ngFor=\\\"let article of mArticles\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar [ngStyle]=\\\"{'background-image': 'url(../assets/images/'+ article.source.id +'.png)'}\\\" class=\\\"example-header-image\\\"></div>\\n      <mat-card-title class=\\\"title\\\">{{article.title}}</mat-card-title>\\n      <mat-card-subtitle>{{article.source.name}}</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image class=\\\"img-article\\\" src={{article.urlToImage}} alt=\\\"\\\">\\n    <mat-card-content>\\n      <p>\\n        {{article.description}}\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"action-buttons\\\">\\n      <button mat-button color=\\\"primary\\\"><mat-icon>thumb_up_alt</mat-icon> 12 Likes</button>\\n      <button mat-button color=\\\"primary\\\"><mat-icon>comment</mat-icon> Comments</button>\\n      <button mat-button color=\\\"primary\\\"><mat-icon>share</mat-icon> Share</button>\\n      <a mat-button color=\\\"primary\\\" href={{article.url}} target=\\\"_blank\\\" ><mat-icon>visibility</mat-icon> More</a>\\n    </mat-card-actions>\\n  </mat-card>\\n</mat-sidenav-container>\\n\"","import { NewsApiService } from './news-api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  mArticles: Array<any>;\n  mSources: Array<any>;\n\n  constructor(private newsapi: NewsApiService) {\n    console.log('app component constructor called');\n  }\n\n  ngOnInit() {\n    //load articles\n    this.newsapi.initArticles().subscribe(data => this.mArticles = data['articles']);\n    //load news sources\n    this.newsapi.initSources().subscribe(data => this.mSources = data['sources']);\n  }\n\n  searchArticles(source) {\n    console.log(\"selected source is: \" + source);\n    this.newsapi.getArticlesByID(source).subscribe(data => this.mArticles = data['articles']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatButtonModule, MatCardModule, MatMenuModule, MatToolbarModule, MatIconModule, MatSidenavModule,\n   MatListModule } from '@angular/material';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsApiService {\n\n  api_key = '7065079046804e7e8d69745630fe7bd6';\n\n  constructor(private http: HttpClient) { }\n  initSources() {\n    return this.http.get('https://newsapi.org/v2/sources?language=en&apiKey=' + this.api_key);\n  }\n  initArticles() {\n    return this.http.get('https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=' + this.api_key);\n  }\n  getArticlesByID(source: String) {\n    return this.http.get('https://newsapi.org/v2/top-headlines?sources=' + source + '&apiKey=' + this.api_key);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}